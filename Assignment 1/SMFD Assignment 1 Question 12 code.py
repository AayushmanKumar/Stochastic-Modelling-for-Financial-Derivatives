# -*- coding: utf-8 -*-
"""SMFD Assignment 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a-SU8dJBk_Gfq-4NobHJ3Si8qK0uY7gx
"""

MOD = 10**9 + 7
MAX_N = 200  # Since we need factorials up to 2n

# Precompute factorials and inverse factorials
fact = [1] * (MAX_N + 1)
inv_fact = [1] * (MAX_N + 1)

# Compute all factorials % MOD
for i in range(1, MAX_N + 1):
    fact[i] = fact[i - 1] * i % MOD

# Compute all inverse factorials using Fermat's little theorem
inv_fact[MAX_N] = pow(fact[MAX_N], MOD - 2, MOD)
for i in range(MAX_N - 1, 0, -1):
    inv_fact[i] = inv_fact[i + 1] * (i + 1) % MOD

def catalan_number(n):
    return fact[2 * n] * inv_fact[n] % MOD * inv_fact[n + 1] % MOD

# Compute and print Pn for n = 1 to 50
for n in range(1, 51):
    print(f"P_{n} = {catalan_number(n)}")

# Compute and print Pn for n = 51 to 100
for n in range(51, 101):
    print(f"P_{n} = {catalan_number(n)}")

"""## Work Distribution

- Ikrima Badr Shamim Ahmed (230482): Questions 1 to 5
- Satyansh Sharma (230938): Questions 6 to 10
- Aayushman Kumar (230029): Questions 11 and 12
"""